@import '../../_variables.scss';

// TODO Copypaste from Status, should unify it somehow
.notification {
  .non-mention.collapsed {
    .StatusContent:not(:active) {
      overflow: hidden;
      max-height: 60px;
      min-height: 35px;
      mask: linear-gradient(to top, white, transparent) bottom/100% 35px no-repeat,
            linear-gradient(to top, white, white);
      -webkit-mask-composite: xor;
      mask-composite: exclude;
      margin-bottom: -10px;
    }
  }
}

.Notification {
  &.-muted {
    padding: 0.25em 0.6em;
    height: 1.2em;
    line-height: 1.2em;
    text-overflow: ellipsis;
    overflow: hidden;
    display: flex;
    flex-wrap: nowrap;

    & .status-username,
    & .mute-thread,
    & .mute-words {
      word-wrap: normal;
      word-break: normal;
      white-space: nowrap;
    }

    & .status-username,
    & .mute-words {
      text-overflow: ellipsis;
      overflow: hidden;
    }

    .status-username {
      font-weight: normal;
      flex: 0 1 auto;
      margin-right: 0.2em;
      font-size: smaller;
    }

    .mute-thread {
      flex: 0 0 auto;
    }

    .mute-words {
      flex: 1 0 5em;
      margin-left: 0.2em;

      &::before {
        content: ' ';
      }
    }

    .unmute {
      flex: 0 0 auto;
      margin-left: auto;
      display: block;
    }
  }

  .type-icon {
    margin: 0 0.1em;
  }

  &.-type--repeat .type-icon {
    color: $fallback--cGreen;
    color: var(--cGreen, $fallback--cGreen);
  }

  &.-type--follow .type-icon {
    color: $fallback--cBlue;
    color: var(--cBlue, $fallback--cBlue);
  }

  &.-type--follow-request .type-icon {
    color: $fallback--cBlue;
    color: var(--cBlue, $fallback--cBlue);
  }

  &.-type--like .type-icon {
    color: orange;
    color: $fallback--cOrange;
    color: var(--cOrange, $fallback--cOrange);
  }

  &.-type--move .type-icon {
    color: $fallback--cBlue;
    color: var(--cBlue, $fallback--cBlue);
  }
}
